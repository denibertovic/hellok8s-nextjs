name: build and deploy
permissions:
  id-token: write # Important for at least docker gha cache
  contents: read
on:
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    name: lint
    steps:
      - name: checkout
        uses: actions/checkout@v4.2.2
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "23"
      - name: Enable Corepack
        run: corepack enable
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.yarn/berry/cache
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock', '.yarnrc.yml', 'package.json') }}
      - name: Install dependencies
        run: yarn install --immutable
      - name: Run linter and typecheck
        run: yarn check
        env:
          SKIP_ENV_VALIDATION: true
  format:
    runs-on: ubuntu-latest
    name: format
    steps:
      - name: checkout
        uses: actions/checkout@v4.2.2
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "23"
      - name: Enable Corepack
        run: corepack enable
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.yarn/berry/cache
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock', '.yarnrc.yml', 'package.json') }}
      - name: Install dependencies
        run: yarn install --immutable
      - name: Check formatting
        run: yarn format:check
        env:
          SKIP_ENV_VALIDATION: true
  test:
    runs-on: ubuntu-latest
    name: test
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    steps:
      - name: checkout
        uses: actions/checkout@v4.2.2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.10.0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "23"
      - name: Enable Corepack
        run: corepack enable
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.yarn/berry/cache
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock', '.yarnrc.yml', 'package.json') }}
      - name: Install dependencies
        run: yarn install --immutable
      - name: Run tests
        run: yarn test
        env:
          DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/test"
          REDIS_URL: "redis://localhost:6379"
  helm-lint:
    runs-on: ubuntu-latest
    name: helm-lint
    steps:
      - name: checkout
        uses: actions/checkout@v4.2.2
      - name: Setup Helm
        uses: azure/setup-helm@v4.0.0
      - name: Install make
        run: sudo apt-get update -qq && sudo apt-get install -y --no-install-recommends make
      - name: Install sops
        uses: mdgreenwald/mozilla-sops-action@v1.6.0
        with:
          version: "3.8.1" # default is latest stable
      - name: Setup age keys
        run: |
          mkdir -p ~/.age
          cat <<EOF > ~/.age/keys.txt
          ${{ secrets.AGE_KEY_FILE }}
          EOF
          chmod 700 ~/.age/keys.txt
      - name: set SHORT_SHA
        run: echo "SHORT_SHA=$(git rev-parse --short=8 HEAD)" >> $GITHUB_ENV
      - name: Helm lint
        shell: bash
        env:
          IMAGE_TAG: "sha-${{ env.SHORT_SHA }}"
          NAMESPACE: "hellok8s"
          ENVIRONMENT: "prod"
        run: make SOPS_AGE_KEY_FILE=$HOME/.age/keys.txt KUBECONFIG=/tmp/noop.yaml helm-lint
  build:
    uses: ./.github/workflows/build.yml
    needs: ["lint", "format", "test", "helm-lint"]
    secrets: inherit
  deploy_prod:
    uses: ./.github/workflows/deploy.yml
    if: github.ref == 'refs/heads/main'
    needs: ["build"]
    with:
      environment: "prod"
      namespace: "hellok8s"
      url: https://hellok8s-nextjs.deni.cloud
    secrets: inherit
